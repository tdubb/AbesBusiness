<!DOCTYPE html>
<html>
<head>
  <title>Abes</title>
  <%= stylesheet_link_tag    "application", media: "all" %>
  <%= javascript_include_tag "application" %>
  <%= csrf_meta_tags %>
</head>
<body>
      <body id="page-top" data-spy="scroll" data-target=".navbar-custom">

    <nav class="navbar navbar-custom navbar-fixed-top" role="navigation">
            <div class="navbar-header page-scroll">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-main-collapse">
                    <i class="fa fa-bars"></i>
                </button>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse navbar-right navbar-main-collapse">
                <ul class="nav navbar-nav">
                    <!-- Hidden li included to remove active class from about link when scrolled up past about section -->
                    <li class="page-scroll">
                        <a href="/">Home</a>
                    </li>
                    <li class="page-scroll">
                        <a href="/abes/who">Who We Are</a>
                    </li>
                    <li class="page-scroll">
                        <a href="/abes/what">What We Do</a>
                    </li>
                    <li class="page-scroll">
                        <a href="/abes/power_point">How We Do It</a>
                    </li>
                    <li class="page-scroll">
                        <a href="/abes/current_status">Current Status</a>
                    </li>
                    <li class="page-scroll">
                        <a href="/abes/news">News</a>
                    </li>
                    <li class="page-scroll">
                        <a href="/inquiries/new">Contact</a>
                    </li>
                </ul>
            </div>
            <!-- /.navbar-collapse -->
        </div>
        <!-- /.container -->
    </nav>

    <div class="title">
        <div class="container">
            <img src="http://imgur.com/r2lx3Sy.png" class="img-responsive">
        </div>
    </div>

<%= yield %>
    <!-- Core JavaScript Files -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="http://netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"></script>

    <!-- Custom Theme JavaScript -->
    <script src="js/concertme.js"></script>

    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/main.js"></script>
    <script>
        $(".ticketbud").click(function(){
             window.location=$(this).find("a").attr("href"); 
             return false;
        });
    </script>
    <script type="text/javascript">
        //jQuery to collapse the navbar on scroll
        $(window).scroll(function() {
            if ($(".navbar").offset().top > 50) {
                $(".navbar-fixed-top").addClass("top-nav-collapse");
            } else {
                $(".navbar-fixed-top").removeClass("top-nav-collapse");
            }
        });

        //jQuery for page scrolling feature - requires jQuery Easing plugin
        $(function() {
            $('.page-scroll a').bind('click', function(event) {
                var $anchor = $(this);
                $('html, body').stop().animate({
                    scrollTop: $($anchor.attr('href')).offset().top
                }, 1500, 'easeInOutExpo');
                event.preventDefault();
            });
        });






        String.prototype.rightChars = function(n){
          if (n <= 0) {
            return "";
          }
          else if (n > this.length) {
            return this;
          }
          else {
            return this.substring(this.length, this.length - n);
          }
        };

        (function($) {
          var
            options = {
              highlightSpeed    : 20,
              typeSpeed         : 75,
              clearDelay        : 300,
              typeDelay         : 200,
              clearOnHighlight  : true,
              typerDataAttr     : 'data-typer-targets',
              typerInterval     : 2000
            },
            highlight,
            clearText,
            backspace,
            type,
            spanWithColor,
            clearDelay,
            typeDelay,
            clearData,
            isNumber,
            typeWithAttribute,
            getHighlightInterval,
            getTypeInterval,
            typerInterval;

          spanWithColor = function(color, backgroundColor) {
            if (color === 'rgba(0, 0, 0, 0)') {
              color = 'rgb(255, 255, 255)';
            }

            return $('<span></span>')
              .css('color', color)
              .css('background-color', backgroundColor);
          };

          isNumber = function (n) {
            return !isNaN(parseFloat(n)) && isFinite(n);
          };

          clearData = function ($e) {
            $e.removeData([
              'typePosition',
              'highlightPosition',
              'leftStop',
              'rightStop',
              'primaryColor',
              'backgroundColor',
              'text',
              'typing'
            ]);
          };

          type = function ($e) {
            var
              // position = $e.data('typePosition'),
              text = $e.data('text'),
              oldLeft = $e.data('oldLeft'),
              oldRight = $e.data('oldRight');

            // if (!isNumber(position)) {
              // position = $e.data('leftStop');
            // }

            if (!text || text.length === 0) {
              clearData($e);
              return;
            }


            $e.text(
              oldLeft +
              text.charAt(0) +
              oldRight
            ).data({
              oldLeft: oldLeft + text.charAt(0),
              text: text.substring(1)
            });

            // $e.text($e.text() + text.substring(position, position + 1));

            // $e.data('typePosition', position + 1);

            setTimeout(function () {
              type($e);
            }, getTypeInterval());
          };

          clearText = function ($e) {
            $e.find('span').remove();

            setTimeout(function () {
              type($e);
            }, typeDelay());
          };

          highlight = function ($e) {
            var
              position = $e.data('highlightPosition'),
              leftText,
              highlightedText,
              rightText;

            if (!isNumber(position)) {
              position = $e.data('rightStop') + 1;
            }

            if (position <= $e.data('leftStop')) {
              setTimeout(function () {
                clearText($e);
              }, clearDelay());
              return;
            }

            leftText = $e.text().substring(0, position - 1);
            highlightedText = $e.text().substring(position - 1, $e.data('rightStop') + 1);
            rightText = $e.text().substring($e.data('rightStop') + 1);

            $e.html(leftText)
              .append(
                spanWithColor(
                    $e.data('backgroundColor'),
                    $e.data('primaryColor')
                  )
                  .append(highlightedText)
              )
              .append(rightText);

            $e.data('highlightPosition', position - 1);

            setTimeout(function () {
              return highlight($e);
            }, getHighlightInterval());
          };

          typeWithAttribute = function ($e) {
            var targets;

            if ($e.data('typing')) {
              return;
            }

            try {
              targets = JSON.parse($e.attr($.typer.options.typerDataAttr)).targets;
            } catch (e) {}

            if (typeof targets === "undefined") {
              targets = $.map($e.attr($.typer.options.typerDataAttr).split(','), function (e) {
                return $.trim(e);
              });
            }

            $e.typeTo(targets[Math.floor(Math.random()*targets.length)]);
          };

          // Expose our options to the world.
          $.typer = (function () {
            return { options: options };
          })();

          $.extend($.typer, {
            options: options
          });

          //-- Methods to attach to jQuery sets

          $.fn.typer = function() {
            var $elements = $(this);

            return $elements.each(function () {
              var $e = $(this);

              if (typeof $e.attr($.typer.options.typerDataAttr) === "undefined") {
                return;
              }

              typeWithAttribute($e);
              setInterval(function () {
                typeWithAttribute($e);
              }, typerInterval());
            });
          };

          $.fn.typeTo = function (newString) {
            var
              $e = $(this),
              currentText = $e.text(),
              i = 0,
              j = 0;

            if (currentText === newString) {
              console.log("Our strings our equal, nothing to type");
              return $e;
            }

            if (currentText !== $e.html()) {
              console.error("Typer does not work on elements with child elements.");
              return $e;
            }

            $e.data('typing', true);

            while (currentText.charAt(i) === newString.charAt(i)) {
              i++;
            }

            while (currentText.rightChars(j) === newString.rightChars(j)) {
              j++;
            }

            newString = newString.substring(i, newString.length - j + 1);

            $e.data({
              oldLeft: currentText.substring(0, i),
              oldRight: currentText.rightChars(j - 1),
              leftStop: i,
              rightStop: currentText.length - j,
              primaryColor: $e.css('color'),
              backgroundColor: $e.css('background-color'),
              text: newString
            });

            highlight($e);

            return $e;
          };

          //-- Helper methods. These can one day be customized further to include things like ranges of delays.

          getHighlightInterval = function () {
            return $.typer.options.highlightSpeed;
          };

          getTypeInterval = function () {
            return $.typer.options.typeSpeed;
          },

          clearDelay = function () {
            return $.typer.options.clearDelay;
          },

          typeDelay = function () {
            return $.typer.options.typeDelay;
          };

          typerInterval = function () {
            return $.typer.options.typerInterval;
          };
        })(jQuery);





        $('h3').typeTo("Clean Energy Solutions for a Brighter Future.");



        $('[data-typer-targets]').typer();

    </script>
</body>
</html>
